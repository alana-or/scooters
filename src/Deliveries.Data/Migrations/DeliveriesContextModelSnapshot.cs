// <auto-generated />
using System;
using Deliveries.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Deliveries.Data.Migrations
{
    [DbContext(typeof(DeliveriesContext))]
    partial class DeliveriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Deliveries.Data.Entities.DeliveryPersonDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("birth");

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cnh");

                    b.Property<string>("CNHImage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cnh-image");

                    b.Property<string>("CNHType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("cnh-type");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("delivery_person");
                });

            modelBuilder.Entity("Deliveries.Data.Entities.DeliveryPersonRentalDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DeliveryPersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("LicencePlate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("licence-plate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<Guid>("ScooterId")
                        .HasColumnType("uuid")
                        .HasColumnName("scooter-id");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPersonId");

                    b.ToTable("deliveries_rental");
                });

            modelBuilder.Entity("Deliveries.Data.Entities.DeliveryPersonRentalDb", b =>
                {
                    b.HasOne("Deliveries.Data.Entities.DeliveryPersonDb", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
